---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: "Get Github organization members"
      set_fact:
        users: "{{ lookup('github_team_members', wantlist=True)|map('lower')|list }}"
        impacted_files:
          - "passwd"
          - "group"
          - "shadow"

    - name: "Debug - display Github organization members"
      debug:
        msg: "{{ item }}"
      with_items: "{{ users }}"

    - name: "Get Github organization members SSH public keys"
      set_fact:
        pubkeys: "{{ pubkeys|default({}) |
                      combine( {item: lookup('github_ssh_pubkeys',
                                              login=item,
                                              wantlist=True) } ) }}"
      with_items: "{{ users }}"

    - name: "Boilerplate - Backup impacted files"
      copy:
        remote_src: yes
        src:  "/etc/{{ item }}"
        dest: "/etc/{{ item }}.ansible-original"
      with_items: "{{ impacted_files }}"

    - name: "Boilerplate - Use host impacted files"
      copy:
        remote_src: yes
        src:  "/host_etc/{{ item }}"
        dest: "/etc/{{ item }}"
      with_items: "{{ impacted_files }}"

    - name: "Create users"
      user:
        name: "{{ item }}"
        append: yes
        groups:
          - xebians
          - docker
        # TODO: we should probably not be forcing everyone to use bash and
        # override their choice. We should configure /etc/default/useradd
        # instead but for now this will be painful since it will be the one in
        # the container that will be used and not the one on the host.
        shell: "/bin/bash"
      with_items: "{{ users }}"

    - name: "Boilerplate - Apply modification to host impacted files"
      copy:
        remote_src: yes
        src:  "/etc/{{ item }}"
        dest: "/host_etc/{{ item }}"
      with_items: "{{ impacted_files }}"

    - name: "Ensure .ssh directory exist"
      file:
        path: "/home/{{ item }}/.ssh"
        state:  directory
        owner:  "{{ item }}"
        group:  "{{ item }}"
        mode: "0755"
      with_items: "{{ users }}"

    - name: "Define authorized keys"
      template:
        src: authorized_keys.j2
        dest: "/home/{{ item.key }}/.ssh/authorized_keys"
        owner:  "{{ item.key }}"
        group:  "{{ item.key }}"
        mode: "0644"
      with_dict: "{{ pubkeys }}"

    - name: "create user personal sandbox structure"
      file:
        path:   "/srv/sandbox-private/{{ item }}"
        state:  directory
        owner:  "{{ item }}"
        group:  "{{ item }}"
        mode:   "0700"
      with_items: "{{ users }}"

    - name: "Create workspace symlink"
      file:
        src:    "/srv/sandbox-private/{{ item }}"
        dest:   "/home/{{ item }}/workspace"
        state:  link
        owner:  "{{ item }}"
        group:  "{{ item }}"
      with_items: "{{ users }}"

    - name: "create user .docker directory"
      file:
        path:   "/home/{{ item }}/.docker"
        state:  directory
        owner:  "{{ item }}"
        group:  "{{ item }}"
        mode:   "0700"
      with_items: "{{ users }}"

    - name: "Configure Docker login to NVCR with shared token"
      file:
        src:    "/etc/docker/config-shared-nvcr-auth.json"
        dest:   "/home/{{ item }}/.docker/config.json"
        state:  link
        # We need to force since there isn't anything in /etc/docker in
        # container. The host /etc is mounted on /host_etc
        force:  yes
        owner:  "{{ item }}"
        group:  "{{ item }}"
      with_items: "{{ users }}"
